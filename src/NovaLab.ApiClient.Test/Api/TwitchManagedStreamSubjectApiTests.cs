/*
 * NovaLab API
 *
 * An ASP.NET Core Web API for managing your streams
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using NovaLab.ApiClient.Client;
using NovaLab.ApiClient.Api;
// uncomment below to import models
//using NovaLab.ApiClient.Model;

namespace NovaLab.ApiClient.Test.Api
{
    /// <summary>
    ///  Class for testing TwitchManagedStreamSubjectApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TwitchManagedStreamSubjectApiTests : IDisposable
    {
        private TwitchManagedStreamSubjectApi instance;

        public TwitchManagedStreamSubjectApiTests()
        {
            instance = new TwitchManagedStreamSubjectApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TwitchManagedStreamSubjectApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TwitchManagedStreamSubjectApi
            //Assert.IsType<TwitchManagedStreamSubjectApi>(instance);
        }

        /// <summary>
        /// Test GetManagedStreamSubjects
        /// </summary>
        [Fact]
        public void GetManagedStreamSubjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? userId = null;
            //int? limit = null;
            //var response = instance.GetManagedStreamSubjects(userId, limit);
            //Assert.IsType<TwitchManagedStreamSubjectDtoApiResult>(response);
        }

        /// <summary>
        /// Test PostManagedStreamSubjects
        /// </summary>
        [Fact]
        public void PostManagedStreamSubjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PostTwitchManagedStreamSubjectDto? postTwitchManagedStreamSubjectDto = null;
            //var response = instance.PostManagedStreamSubjects(postTwitchManagedStreamSubjectDto);
            //Assert.IsType<ApiResult>(response);
        }

        /// <summary>
        /// Test PostSelectManagedStreamSubject
        /// </summary>
        [Fact]
        public void PostSelectManagedStreamSubjectTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? userId = null;
            //string? subjectName = null;
            //var response = instance.PostSelectManagedStreamSubject(userId, subjectName);
            //Assert.IsType<ApiResult>(response);
        }
    }
}
