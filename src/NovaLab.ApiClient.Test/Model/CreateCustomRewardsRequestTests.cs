/*
 * NovaLab API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using NovaLab.ApiClient.Api;
using NovaLab.ApiClient.Model;
using NovaLab.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace NovaLab.ApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing CreateCustomRewardsRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CreateCustomRewardsRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CreateCustomRewardsRequest
        //private CreateCustomRewardsRequest instance;

        public CreateCustomRewardsRequestTests()
        {
            // TODO uncomment below to create an instance of CreateCustomRewardsRequest
            //instance = new CreateCustomRewardsRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CreateCustomRewardsRequest
        /// </summary>
        [Fact]
        public void CreateCustomRewardsRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" CreateCustomRewardsRequest
            //Assert.IsType<CreateCustomRewardsRequest>(instance);
        }


        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Fact]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Prompt'
        /// </summary>
        [Fact]
        public void PromptTest()
        {
            // TODO unit test for the property 'Prompt'
        }
        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Fact]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }
        /// <summary>
        /// Test the property 'IsEnabled'
        /// </summary>
        [Fact]
        public void IsEnabledTest()
        {
            // TODO unit test for the property 'IsEnabled'
        }
        /// <summary>
        /// Test the property 'BackgroundColor'
        /// </summary>
        [Fact]
        public void BackgroundColorTest()
        {
            // TODO unit test for the property 'BackgroundColor'
        }
        /// <summary>
        /// Test the property 'IsUserInputRequired'
        /// </summary>
        [Fact]
        public void IsUserInputRequiredTest()
        {
            // TODO unit test for the property 'IsUserInputRequired'
        }
        /// <summary>
        /// Test the property 'IsMaxPerStreamEnabled'
        /// </summary>
        [Fact]
        public void IsMaxPerStreamEnabledTest()
        {
            // TODO unit test for the property 'IsMaxPerStreamEnabled'
        }
        /// <summary>
        /// Test the property 'MaxPerStream'
        /// </summary>
        [Fact]
        public void MaxPerStreamTest()
        {
            // TODO unit test for the property 'MaxPerStream'
        }
        /// <summary>
        /// Test the property 'IsMaxPerUserPerStreamEnabled'
        /// </summary>
        [Fact]
        public void IsMaxPerUserPerStreamEnabledTest()
        {
            // TODO unit test for the property 'IsMaxPerUserPerStreamEnabled'
        }
        /// <summary>
        /// Test the property 'MaxPerUserPerStream'
        /// </summary>
        [Fact]
        public void MaxPerUserPerStreamTest()
        {
            // TODO unit test for the property 'MaxPerUserPerStream'
        }
        /// <summary>
        /// Test the property 'IsGlobalCooldownEnabled'
        /// </summary>
        [Fact]
        public void IsGlobalCooldownEnabledTest()
        {
            // TODO unit test for the property 'IsGlobalCooldownEnabled'
        }
        /// <summary>
        /// Test the property 'GlobalCooldownSeconds'
        /// </summary>
        [Fact]
        public void GlobalCooldownSecondsTest()
        {
            // TODO unit test for the property 'GlobalCooldownSeconds'
        }
        /// <summary>
        /// Test the property 'ShouldRedemptionsSkipRequestQueue'
        /// </summary>
        [Fact]
        public void ShouldRedemptionsSkipRequestQueueTest()
        {
            // TODO unit test for the property 'ShouldRedemptionsSkipRequestQueue'
        }

    }

}
