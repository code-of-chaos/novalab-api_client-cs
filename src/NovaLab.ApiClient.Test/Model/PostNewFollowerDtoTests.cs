/*
 * NovaLab API
 *
 * An ASP.NET Core Web API for managing your streams
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using NovaLab.ApiClient.Api;
using NovaLab.ApiClient.Model;
using NovaLab.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace NovaLab.ApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing PostNewFollowerDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PostNewFollowerDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PostNewFollowerDto
        //private PostNewFollowerDto instance;

        public PostNewFollowerDtoTests()
        {
            // TODO uncomment below to create an instance of PostNewFollowerDto
            //instance = new PostNewFollowerDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PostNewFollowerDto
        /// </summary>
        [Fact]
        public void PostNewFollowerDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" PostNewFollowerDto
            //Assert.IsType<PostNewFollowerDto>(instance);
        }


        /// <summary>
        /// Test the property 'TwitchBoardcasterId'
        /// </summary>
        [Fact]
        public void TwitchBoardcasterIdTest()
        {
            // TODO unit test for the property 'TwitchBoardcasterId'
        }
        /// <summary>
        /// Test the property 'FollowerTwitchUserId'
        /// </summary>
        [Fact]
        public void FollowerTwitchUserIdTest()
        {
            // TODO unit test for the property 'FollowerTwitchUserId'
        }

    }

}
