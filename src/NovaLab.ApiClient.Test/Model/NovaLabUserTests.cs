/*
 * NovaLab API
 *
 * An ASP.NET Core Web API for managing your streams
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using NovaLab.ApiClient.Api;
using NovaLab.ApiClient.Model;
using NovaLab.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace NovaLab.ApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing NovaLabUser
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class NovaLabUserTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for NovaLabUser
        //private NovaLabUser instance;

        public NovaLabUserTests()
        {
            // TODO uncomment below to create an instance of NovaLabUser
            //instance = new NovaLabUser();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NovaLabUser
        /// </summary>
        [Fact]
        public void NovaLabUserInstanceTest()
        {
            // TODO uncomment below to test "IsType" NovaLabUser
            //Assert.IsType<NovaLabUser>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'UserName'
        /// </summary>
        [Fact]
        public void UserNameTest()
        {
            // TODO unit test for the property 'UserName'
        }
        /// <summary>
        /// Test the property 'NormalizedUserName'
        /// </summary>
        [Fact]
        public void NormalizedUserNameTest()
        {
            // TODO unit test for the property 'NormalizedUserName'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'NormalizedEmail'
        /// </summary>
        [Fact]
        public void NormalizedEmailTest()
        {
            // TODO unit test for the property 'NormalizedEmail'
        }
        /// <summary>
        /// Test the property 'EmailConfirmed'
        /// </summary>
        [Fact]
        public void EmailConfirmedTest()
        {
            // TODO unit test for the property 'EmailConfirmed'
        }
        /// <summary>
        /// Test the property 'PasswordHash'
        /// </summary>
        [Fact]
        public void PasswordHashTest()
        {
            // TODO unit test for the property 'PasswordHash'
        }
        /// <summary>
        /// Test the property 'SecurityStamp'
        /// </summary>
        [Fact]
        public void SecurityStampTest()
        {
            // TODO unit test for the property 'SecurityStamp'
        }
        /// <summary>
        /// Test the property 'ConcurrencyStamp'
        /// </summary>
        [Fact]
        public void ConcurrencyStampTest()
        {
            // TODO unit test for the property 'ConcurrencyStamp'
        }
        /// <summary>
        /// Test the property 'PhoneNumber'
        /// </summary>
        [Fact]
        public void PhoneNumberTest()
        {
            // TODO unit test for the property 'PhoneNumber'
        }
        /// <summary>
        /// Test the property 'PhoneNumberConfirmed'
        /// </summary>
        [Fact]
        public void PhoneNumberConfirmedTest()
        {
            // TODO unit test for the property 'PhoneNumberConfirmed'
        }
        /// <summary>
        /// Test the property 'TwoFactorEnabled'
        /// </summary>
        [Fact]
        public void TwoFactorEnabledTest()
        {
            // TODO unit test for the property 'TwoFactorEnabled'
        }
        /// <summary>
        /// Test the property 'LockoutEnd'
        /// </summary>
        [Fact]
        public void LockoutEndTest()
        {
            // TODO unit test for the property 'LockoutEnd'
        }
        /// <summary>
        /// Test the property 'LockoutEnabled'
        /// </summary>
        [Fact]
        public void LockoutEnabledTest()
        {
            // TODO unit test for the property 'LockoutEnabled'
        }
        /// <summary>
        /// Test the property 'AccessFailedCount'
        /// </summary>
        [Fact]
        public void AccessFailedCountTest()
        {
            // TODO unit test for the property 'AccessFailedCount'
        }
        /// <summary>
        /// Test the property 'TwitchBroadcasterId'
        /// </summary>
        [Fact]
        public void TwitchBroadcasterIdTest()
        {
            // TODO unit test for the property 'TwitchBroadcasterId'
        }

    }

}
